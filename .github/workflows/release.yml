name: Publish

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: start service container
      run: |
        docker run --rm -d --name minio -p 9000:9000 \
          -e MINIO_ROOT_USER=minioadmin \
          -e MINIO_ROOT_PASSWORD=minioadmin \
          quay.io/minio/minio server /data

        sleep 3
        curl -s -D- http://localhost:9000

    - uses: actions/checkout@v2
    - uses: haskell-actions/setup@v2
      with:
        enable-stack: true
        stack-version: 'latest'
    - name: Cache
      uses: actions/cache@v4
      env:
        cache-name: cache-stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/stack.yaml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Build dependencies
      run: |
        stack --no-terminal build --test --only-dependencies
    - name: Build
      run: |
        mkdir dist
        stack --no-terminal build --test --no-run-tests --copy-bins --local-bin-path dist
    - name: Test
      run: |
        export TASKRUNNER_TEST_S3_ENDPOINT=http://localhost:9000
        export TASKRUNNER_TEST_S3_ACCESS_KEY=minioadmin
        export TASKRUNNER_TEST_S3_SECRET_KEY=minioadmin

        stack --no-terminal build --test
    - name: Zip
      run: |
        cd dist
        tar czvf taskrunner-linux.tar.gz taskrunner
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./dist/taskrunner-linux.tar.gz
        asset_name: taskrunner-linux.tar.gz
        asset_content_type: application/x-tar
